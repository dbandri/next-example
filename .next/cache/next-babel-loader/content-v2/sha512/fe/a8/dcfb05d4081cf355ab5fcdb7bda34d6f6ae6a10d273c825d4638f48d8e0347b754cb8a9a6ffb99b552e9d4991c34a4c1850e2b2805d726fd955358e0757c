{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/soporte/Projects/next-project/pages/index.js\",\n    _this = this;\n\nimport Head from \"next/head\";\nimport Container from \"../components/Layout\";\n\nvar Index = function Index() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"nProject - Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hello world!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/soporte/Projects/next-project/pages/index.js"],"names":["Head","Container","Index"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,sBACZ;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,SAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA,kBADY;AAAA,CAAd;;KAAMA,K;AAWN,eAAeA,KAAf","sourcesContent":["import Head from \"next/head\";\nimport Container from \"../components/Layout\";\n\nconst Index = () => (\n  <>\n    <Head>\n      <title>nProject - Home</title>\n    </Head>\n    <Container>\n      <h1>hello world!</h1>\n    </Container>\n  </>\n);\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}